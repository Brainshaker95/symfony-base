@mixin breakpoint($breakpoint) {
  @media (min-width: map-get($breakpoints, $breakpoint)) {
    @content;
  }
}

@mixin breakpointify($name) {
  .#{$name} {
    @each $breakpoint, $width in $breakpoints {
      @include breakpoint($breakpoint) {
        &-#{$breakpoint} {
          @content;
        }
      }
    }
  }
}

@mixin center {
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
}

@mixin center-h {
  position: absolute;
  left: 50%;
  transform: translateX(-50%);
}

@mixin center-v {
  position: absolute;
  top: 50%;
  transform: translateY(-50%);
}

@mixin hide-scrollbar {
  scrollbar-width: none;
  -ms-overflow-style: none;

  &::-webkit-scrollbar {
    width: 0;
    height: 0;
  }
}

@mixin focus-color {
  &:focus {
    color: $focus-color !important;
    outline: 0;
  }
}

@mixin focus-border {
  &:focus {
    border: 1px solid $focus-color;
  }
}

@mixin focus-outline {
  &:focus {
    outline: 1px solid $focus-color;
  }
}

@mixin focus-shadow {
  &:focus {
    border-color: $focus-color;
    outline: 0;
    box-shadow: 0 0 0px 1px $focus-color;
  }
}

@mixin focus-background {
  background-color: $focus-color;
}

@function strip-unit($value) {
  @return $value / ($value * 0 + 1);
}

@mixin responsive-font-size($min-font-size, $max-font-size, $min-viewport-width: $min-viewport-width, $max-viewport-width: $max-viewport-width) {
  font-size: $min-font-size;

  @media screen and (min-width: $min-viewport-width) {
    font-size: calc(#{$min-font-size} + #{strip-unit($max-font-size - $min-font-size)} * ((100vw - #{$min-viewport-width}) / #{strip-unit($max-viewport-width - $min-viewport-width)}));
  }

  @media screen and (min-width: $max-viewport-width) {
    font-size: $max-font-size;
  }
}

@mixin chevron {
  &::after {
    position: absolute;
    content: '';
    width: 1em;
    height: 1em;
    transition: border-color 300ms ease;
    border: {
      style: solid;
      width: 0.2em 0.2em 0 0;
      radius: 0.1em;
      color: $darkgrey;
    };

    .theme--dark & {
      border-color: $white;
    }
  }
}

@mixin chevron-up {
  @include chevron;

  &::after {
    transform: rotate(-45deg);
  }
}

@mixin chevron-down {
  @include chevron;

  &::after {
    transform: rotate(135deg);
  }
}

@mixin chevron-left {
  @include chevron;

  &::after {
    left: 0.5em;
    transform: rotate(-135deg);
  }
}

@mixin chevron-right {
  @include chevron;

  &::after {
    right: 0.5em;
    transform: rotate(45deg);
  }
}

@mixin chevron-down-rotating-default {
  @include chevron-down;

  position: relative;

  &::after {
    pointer-events: none;
    transform: rotate(135deg) scale(0.7);
    transition:
      top 300ms ease,
      border-color 300ms ease,
      transform 300ms ease;
  }
}

@mixin chevron-down-rotating-expanded {
  &::after {
    transform: rotate(315deg) scale(0.7);
  }
}

@mixin checkbox-radio-label {
  position: relative;
  padding: 0;
  top: -0.1em;
  left: 1.5em;
  width: calc(100% - 1.5em);
  color: $darkgrey;
  transform: none;
  transition: none;
  pointer-events: all;
  cursor: pointer;

  .theme--dark & {
    color: $white;
  }
}
